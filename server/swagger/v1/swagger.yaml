---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/airands/accounts":
    post:
      summary: Create a new account
      tags:
      - Accounts
      operationId: createAccount
      parameters: []
      responses:
        '200':
          description: Account created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/airands_account"
        '400':
          description: Creation error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/airands_account"
  "/customers":
    post:
      summary: Create new customer user
      tags:
      - Customers
      operationId: createUser
      parameters: []
      responses:
        '201':
          description: sms confirmation sent
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/customer_registration"
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/customer_registration"
    get:
      summary: Get authenticated customer
      tags:
      - Customers
      operationId: getUser
      responses:
        '200':
          description: authenticated customer user
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/customer_dto"
  "/orders":
    post:
      summary: Create new order
      tags:
      - Orders
      operationId: createOrder
      parameters: []
      responses:
        '201':
          description: order created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order"
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_order"
    get:
      summary: Get all customer orders
      tags:
      - Orders
      operationId: getAllOrders
      responses:
        '200':
          description: All customer orders
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/order"
  "/orders/{order_id}":
    get:
      summary: Get specific customer order
      tags:
      - Orders
      operationId: getOrder
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Specified customer order
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/order"
  "/sessions":
    post:
      summary: Creates an authenticated session
      tags:
      - Session
      operationId: authenticate
      parameters: []
      responses:
        '200':
          description: session authenticated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/customer_dto"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_dto"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/phone_confirmation"
    get:
      summary: get session
      tags:
      - Session
      operationId: getCurrentSession
      responses:
        '200':
          description: session info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/customer_dto"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_dto"
    delete:
      summary: Deletes an auth session
      tags:
      - Session
      operationId: logout
      responses:
        '200':
          description: session deleted
          content: {}
        '401':
          description: unauthorized
          content: {}
servers:
- url: https://{defaultHost}/api/v1
  variables:
    defaultHost:
      default: dev2.airands.ca
components:
  schemas:
    error_dto:
      type: object
      properties:
        message:
          type: string
    error_response:
      type: object
      properties:
        message:
          type: string
        code:
          "$ref": "#/components/schemas/error_code"
    customer_dto:
      type: object
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
        auth_provider:
          type: string
        auth_provider_uid:
          type: string
        avatar_url:
          type: string
        address:
          "$ref": "#/components/schemas/location_address"
      required:
      - email
      - first_name
      - last_name
      - auth_provider
    customer_registration:
      type: object
      properties:
        user_data:
          "$ref": "#/components/schemas/customer_dto"
        auth_provider_token:
          type: string
        app_platform:
          "$ref": "#/components/schemas/app_platform"
      required:
      - user_data
      - auth_provider_token
      - app_platform
    phone_confirmation:
      type: object
      properties:
        phone_number:
          type: string
        confirmation_pin:
          type: string
      required:
      - phone_number
      - confirmation_pin
    location_address:
      type: object
      properties:
        street_number:
          type: string
        street_name:
          type: string
        unit_number:
          type: string
        city:
          type: string
        province:
          type: string
        postal_code:
          type: string
        location_name:
          type: string
        location_type:
          "$ref": "#/components/schemas/location_type"
      required:
      - street_number
      - street_name
      - city
      - province
      - postal_code
    order:
      type: object
      properties:
        order_type:
          "$ref": "#/components/schemas/order_type"
        order_description:
          type: string
        locations:
          "$ref": "#/components/schemas/new_order_locations"
      required: []
    new_order:
      type: object
      properties:
        order_type:
          "$ref": "#/components/schemas/order_type"
        order_description:
          type: string
        locations:
          "$ref": "#/components/schemas/new_order_locations"
      required:
      - order_type
      - order_description
      - locations
    new_order_locations:
      type: object
      properties:
        pick_up:
          "$ref": "#/components/schemas/location_address"
        drop_off:
          "$ref": "#/components/schemas/location_address"
      required:
      - pick_up
      - drop_off
    airands_account:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
    social_platform:
      type: string
      enum:
      - google
      - facebook
      - apple
    app_platform:
      type: string
      enum:
      - android
      - ios
      - web
    order_type:
      type: string
      enum:
      - commercial_pick_up
      - private_pick_up
    location_type:
      type: string
      enum:
      - commercial
      - residential
    error_code:
      type: string
      enum:
      - generic
      - account_exists
